<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Unqualified Success</title>
    <link>https://karledwards.github.io/tags/r/</link>
    <description>Recent content in R on Unqualified Success</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Thu, 26 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://karledwards.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Add a Task to Add Some Tasks</title>
      <link>https://karledwards.github.io/post/a-simple-scheduler/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://karledwards.github.io/post/a-simple-scheduler/</guid>
      <description>Now letâ€™s use Schedule_Reference_Class.R in a real-world situation.
 Define a recipe
 Create a schedule
 Add a task to apply a recipe to all the video files in the in-box.
 Perform the task and view the resulting schedule.
 Perform the steps of the recipe, following along as each task finishes.
  Define a Recipe
# Define a recipe to apply to each video file the_recipe &amp;lt;- function( vid_file ) tibble::tribble( ~fun , ~args , &amp;quot;extract_images&amp;quot;, list( from_video = vid_file, to_path = paste0( DATA_PATH, &amp;#39;box2/&amp;#39; )) , &amp;quot;do&amp;quot; , list( source = &amp;#39;box2/&amp;#39;, process = &amp;#39;adjust_for_brighter_top&amp;#39;, destination = &amp;#39;box3/&amp;#39;, more_args = &amp;#39; -a k=0.</description>
    </item>
    
    <item>
      <title>An ML Pipeline in R</title>
      <link>https://karledwards.github.io/post/an-ml-pipeline-in-r/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://karledwards.github.io/post/an-ml-pipeline-in-r/</guid>
      <description>At the beginning of a new machine learning project, it&#39;s a good idea to create a baseline model that functions end-to-end, even if the performance is not very good. Soon enough, you will think of ideas for better models, and want to try them, evaluate their performance, and maybe keep them for future use in a production environment. Over the lifetime of a project, data presented to the pipeline inlet are processed according to a particular recipe, which generates some useful output.</description>
    </item>
    
    <item>
      <title>Large Integer Multiplication</title>
      <link>https://karledwards.github.io/project/large-integer-multiplication/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://karledwards.github.io/project/large-integer-multiplication/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Photogrammetric Potsherd Profile</title>
      <link>https://karledwards.github.io/project/photogrammetric-potsherd/</link>
      <pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://karledwards.github.io/project/photogrammetric-potsherd/</guid>
      <description>The General Idea Make photogrammetry readily accessible to archaeologists through open source computational archaeology.
More Specifically This project describes in some detail the steps to photograph a potsherd and generate a mathematical model from the resulting images, and, in much less detail, suggests how to automatically measure the object represented by the model. The R source code is available on github and an R package will be available soon. A number of simplifying assumptions accelerated this initial draft.</description>
    </item>
    
  </channel>
</rss>